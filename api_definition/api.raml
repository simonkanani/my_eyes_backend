#%RAML 1.0
---
title: My Eyes
version: v0.1
######################
##### Resources #####
######################

/users:
  /generate_patient:
    get:
      description: Randomly generates 5-digit Username & 6-digit Password credentials for Patients,
                  validating against existing Users to ensure there are no duplicated entries.
      responses:
        200:
          body:
            application/json:
              example:
                {
                  'username': 'ABCDE',
                  'password': '12345',
                }
        400:
          body:
            application/json:
              example:
                {
                  'message': An error has occured!
                }
  /register_patient:
    post:
          description: Registers a patient to the My Eyes Application.
          body:
            application/json:
              example:
                {
                  'username': 'ABCDE',
                  'password': '12345',
                  'younger_age_band': True,
                  'clinician_id': 0
                }
          responses:
            200:
              body:
                application/json:
                  example:
                    {
                    'user_id': 1,
                    'username': 'ABCDE',
                    'password': '12345',
                    'younger_age_band': True,
                    'clinician_id': 0
                    'part_1_is_active': True,
                    'part_2_is_active': False,
                    'current_attempt_number': 1
                    }
            400:
              body:
                application/json:
                  example:
                    {
                      'message': An error has occured!
                    }
  /search_patients/<str:username>:
    get:
      description: Retrieve details about a single Patient by Username
      responses:
        200:
          body:
            application/json:
              example:
                {
                  "user_id": 1,
                  "username": "ABCDE",
                  "password": "pbkdf2_sha256$180000$o40CJ8Bccr7a$iebL8aV6jfERIVw6zkmahR1OT3Z7lK++UaZh6+A0LHE=",
                  "younger_age_band": True,
                  "clinician_id": 0,
                  "part_1_is_active": True,
                  "part_2_is_active": False,
                  "current_attempt_number": 2
                }
        404:
          body:
            application/json:
              example:
                {
                  'detail': 'Not found.'
                }
  /int:user_id:
    get:
      description: Retrieve details about a single Patient by User ID
      responses:
        200:
          body:
            application/json:
              example:
                {
                  "user_id": 1,
                  "username": "ABCDE",
                  "password": "pbkdf2_sha256$180000$o40CJ8Bccr7a$iebL8aV6jfERIVw6zkmahR1OT3Z7lK++UaZh6+A0LHE="
                  "younger_age_band": True,
                  "clinician_id": 0,
                  "part_1_is_active": True,
                  "part_2_is_active": False,
                  "current_attempt_number": 3
                }
        404:
          body:
            application/json:
              example:
                {
                  'detail': 'Not found.'
                }
    /preferences:
        get:
          description: Retrieve details about a single Patient's Preferences
          responses:
            200:
              body:
                application/json:
                  example:
                    {
                      'user_id': 0,
                      'theme': 1,
                      'haptic': True,
                      'text_to_speech': False
                    }
            404:
              body:
                application/json:
                  example:
                    {
                      'detail': 'Not found.'
                    }
    /preferences/update:
      put:
            description: Update a single Patient's Preferences
            body:
              application/json:
                example:
                  {
                    'user_id': '0',
                    'Themes': 1,
                    'haptic': True,
                    'text_to_speech': False
                  }
            responses:
              200:
                body:
                  application/json:
                    example:
                      {
                        'user_id': '0',
                        'Themes': 1,
                        'haptic': True,
                        'text_to_speech': False
                      }
              400:
                body:
                  application/json:
                    examples:
                      example1:
                        {
                          'message': Inconsistent Request. Check User ID in URL against request JSON.
                        }
                      example2:
                        {
                          'message': Patient matching query does not exist.
                        }
  /activate:
      post:
            description: Manually Activate or Deactivate a Patient's Part 1 or Part 2 Survey permissions. It auto-increments the Patient's current attempt number.

            body:
              application/json:
                example:
                  {
                    'user_id': '0',
                    'part_1_is_active': True,
                    'part_2_is_active': False
                  }
            responses:
              200:
                body:
                  application/json:
                    example:
                      {
                        'user_id': '0',
                        'part_1_is_active': True,
                        'part_2_is_active': False,
                        'current_attempt_number': 2
                      }
              400:
                body:
                  application/json:
                    examples:
                      example1:
                        {
                          'message': Inconsistent Request. Check User ID in URL against request JSON.
                        }
                      example2:
                        {
                          'message': Patient matching query does not exist.
                        }
  /login:
    post:
      description: Authenticates User details using Basic Authentication
      body:
        application/json:
          example:
            {
              'username' : ABCDE,
              'password': 12345
            }
      responses:
        200:
          body:
            application/json:
              examples:
                example1:
                  {
                    'id':0,
                    'username': ABCDE,
                    'user_type': Clinician
                  }
                example2:
                  {
                    'id':1,
                    'username': FGHIJ,
                    'user_type': Patient,
                    'younger_age_band': True,
                    'part_1_is_active': True,
                    'part_2_is_active': False,
                    'current_attempt_number': 3
                  }
        400:
          body:
            application/json:
              example:
                {
                  'message': Invalid Login Details
                }

/survey:
  /str:survey_name:
    /summarize:
      get:
        description: Retreives summary data for a specific Survey
        responses:
          200:
            body:
              application/json:
                example:
                  {
                    'id': 1,
                    'name': VQoL_C,
                    'Number of Questions': 1,
                    'Patients Completed': 0
                }
          404:
            body:
              application/json:
                example:
                  {
                    'message': Survey matching query does not exist.
                  }
    /all:
      get:
        description: Lists all Questions within a Survey
        responses:
          200:
            body:
              application/json:
                example:
                  [
                    {
                      'id': 1,
                      'question': I make friends easily,
                      'question_number': 1,
                      'survey_id': 1,
                      'survey': VQoL_C,
                    },
                    {
                      'id': 2,
                      'question': I keep friends easily,
                      'question_number': 2,
                      'survey_id': 1,
                      'survey': VQoL_C,
                    }
                  ]
          404:
            body:
              application/json:
                example:
                  {
                    'message': No results found
                  }
    /int:question_number:
      get:
        description: Retrieve a single Question within a Survey
        responses:
          200:
            body:
              application/json:
                example:
                  {
                      'id': 1,
                      'survey_id': "VQoL_C",
                      'question': "I make friends easily",
                      'question_number': 1
                  }
          404:
            body:
              application/json:
                example:
                  {
                    'message': Question Does Not Exist
                  }
  /int:patient_id/str:survey_name:
    /int:question_number:
      get:
        description: Retreives a Patient's Response to a single Question within a Survey
        responses:
          200:
            body:
              application/json:
                example:
                  {
                    'patient_id': 2,
                    'survey': VQoL_C,
                    'question_number': 2
                    'response': 1,
                    'response_description': "NOT AT ALL TRUE",
                    'time_stamp': "2020-04-01T12:26:55.412666Z",
                    'attempt_number': 3
                  }
          404:
            body:
              application/json:
                      examples:
                        example1:
                          {
                            'message': Response matching query does not exist.
                          }
                        example2:
                          {
                            'message': Survey matching query does not exist.
                          }
                        example3:
                          {
                            'message': Question matching query does not exist.
                          }
    /all:
      get:
        description: Lists a Patient's response to all Questions within a Survey
        responses:
          200:
            body:
              application/json:
                example:
                  [
                    {
                      'patient_id': 2,
                      'survey': VQoL_C,
                      'question_number': 1,
                      'response': 1,
                      'response_description': "NOT AT ALL TRUE",
                      'time_stamp': "2020-04-01T12:26:55.412666Z",
                      'attempt_number': 3
                    },
                    {
                      'patient_id': 2,
                      'survey': VQoL_C,
                      'question_number': 2,
                      'response': 2,
                      'response_description': "A LITTLE BIT TRUE",
                      'time_stamp': "2020-04-01T12:37:55.412666Z",
                      "attempt_number": 3
                    }
                  ]
          404:
            body:
              application/json:
                example:
                  {
                    'message': No results found
                  }
    /summarize:
      get:
        description: Returns details for a single Survey for a single Patient
        responses:
          200:
            body:
              application/json:
                example:
                  {
                    "survey_name": "Survey_Name",
                    "patient_id": 0,
                    "number_of_questions": 30,
                    "answered": 10
                  }
          404:
            body:
              application/json:
                example:
                  {
                    'message': Survey matching query does not exist
                  }


  /post_response:
    post:
      description: Saves a Patients response to a single Question.
      body:
        application/json:
          example:
            {
              'patient_id': 1,
              'question_id': 2,
              'response': 3,
              'attempt_number': 3
            }
      responses:
        200:
          body:
            application/json:
              example:
                {
                  'patient_id': 2,
                  'survey': VQoL_C,
                  'question_number': 2,
                  'response': 2,
                  'response_description': "A LITTLE BIT TRUE",
                  'time_stamp': "2020-04-01T12:37:55.412666Z",
                  'attempt_number': 3
                }
        400:
          body:
            application/json:
              example:
                {
                  "non_field_errors":
                    [
                      "The fields question_id, patient_id must make a unique set."
                    ]
                }


